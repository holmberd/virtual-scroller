var h={DOWN:"down",UP:"up"};function p(s,t){let e=[];for(let i=0;i<s;i++){if(!i){e[i]=t(i);continue}e[i]=e[i-1]+t(i)}return e}function a(s,t,e){if(!e){let l=0,n=l,c=s.length;for(;n<c&&!(r(s,n)>t);n++);return[l,n]}let i=b(s,l=>l>e),o=b(s,l=>l>e+t,i);return[i,o]}function I(s,t,e,i,o=h.DOWN,l){let n=g(s,e,i);if(!l&&o===h.DOWN)return[0,n-t];let c=r(s,e-1),f=l-c,u=n-t-f;return o===h.UP?[f,m(s,i)-u]:[m(s,e)-f,u]}function v(s,t,e){let i=s.length;x(i,t,e);let o=r(s,t-1),l=e>=i-1?0:g(s,e+1,i-1);return[o,l]}function g(s,t,e){x(s.length,t,e);let i=r(s,e),o=r(s,t-1);return i-o}function m(s,t){return r(s,t)-r(s,t-1)}function r(s,t){if(!s)throw Error("Missing required argument: itemsScrollIndex");return s[t]||0}function x(s,t,e){if(t>e)throw Error("start index must come before stop index");if(t<0||e<0||e>=s)throw Error("startIndex must be > -1 and -1 < stopIndex < itemCount");return!0}function b(s,t,e=-1){let i=s.length-1;for(;e+1<i;){let o=e+(i-e>>1);t(s[o])?i=o:e=o}return i}var w=document.createElement("template");w.innerHTML=`
  <style>
    :host {
      display: block;
      position: relative;
      contain: content;
      overflow: scroll;
      overflow-x: hidden;
    }
    #top-overflow, #bottom-overflow {
      visibility: hidden;
    }
  </style>

  <div id='top-overflow'></div>
  <slot></slot>
  <div id='bottom-overflow'></div>
`;var S="visible-range-change",d=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(document.importNode(w.content,!0)),this.visibleStartIndex=0,this.visibleStopIndex=0,this._offsetVisibleIndex=0,this._itemCount=0,this._itemsScrollIndex=[],this._lastScrollOffset=0,this._clientHeightCache=0,this._calcItemHeight=()=>0,this._resizeObserver=null}get calcItemHeight(){return this._calcItemHeight}set calcItemHeight(t){this._calcItemHeight=t}get height(){return this._clientHeightCache||this.clientHeight}set height(t){this._clientHeightCache=t}get itemsScrollIndex(){return this._itemsScrollIndex}set itemsScrollIndex(t){this._itemsScrollIndex=t}get itemCount(){return this._itemCount}set itemCount(t){this._itemCount=t}get offsetVisibleIndex(){return this._offsetVisibleIndex}set offsetVisibleIndex(t){this._offsetVisibleIndex=t}onVisibleRangeChange(t){this.addEventListener(S,t)}connectedCallback(){this.height=this.clientHeight,this._lastScrollOffset=this.scrollTop,this.addEventListener("scroll",this.handleScroll)}disconnectedCallback(){this.removeEventListener("scroll",this.handleScroll),this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null)}init(t,e,i=0){this.itemCount=t,this.calcItemHeight=e,this.offsetVisibleIndex=i,this.resetItemsScrollIndex()}update(){let[t,e]=a(this.itemsScrollIndex,this.height,this.scrollTop);this.updateVisibleItemIndexes(t,e)}resetItemsScrollIndex(){this.itemsScrollIndex=p(this.itemCount,this.calcItemHeight),this.update()}updateVisibleItemIndexes(t,e){if(this.visibleStartIndex===t&&this.visibleStopIndex===e)return;this.visibleStartIndex=t,this.visibleStopIndex=e;let i=Math.max(0,t-this.offsetVisibleIndex),o=Math.min(Math.max(0,this.itemCount-1),e+this.offsetVisibleIndex);this.updateScrollOverflow(i,o),this.dispatchEvent(new CustomEvent(S,{detail:{startIndex:i,stopIndex:o,offsetIndex:this.offsetVisibleIndex},bubbles:!0}))}handleScroll(t){let e=this.scrollTop;if(e===this._lastScrollOffset)return;let o=e-this._lastScrollOffset>0;this._lastScrollOffset=e;let[l,n]=I(this.itemsScrollIndex,this.height,this.visibleStartIndex,this.visibleStopIndex,o?h.DOWN:h.UP,e);if(n<0||l<0){let[c,f]=a(this.itemsScrollIndex,this.height,e);this.updateVisibleItemIndexes(c,f)}}handleResize(){this.height=this.clientHeight,this.update()}updateScrollOverflow(t,e){let[i,o]=v(this.itemsScrollIndex,t,e);this.setTopOverflowHeight(i),this.setBottomOverflowHeight(o)}setBottomOverflowHeight(t){let e=this.shadowRoot.querySelector("#bottom-overflow");e.style.height=`${Math.max(0,t)}px`}setTopOverflowHeight(t){let e=this.shadowRoot.querySelector("#top-overflow");e.style.height=`${Math.max(0,t)}px`}};customElements.get("virtual-scroller")||customElements.define("virtual-scroller",d);export{d as default};
//# sourceMappingURL=virtual-scroller.esm.js.map
