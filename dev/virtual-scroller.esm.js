var o={HORIZONTAL:"horizontal",VERTICAL:"vertical",isVertical(s){return o.VERTICAL===s}};function b(s,t,e){if(!e){let r=0,l=r,f=s.length;for(;l<f&&!(h(s,l)>t);)l++;return[r,l]}let i=_(s,r=>r>e),n=_(s,r=>r>e+t,i);return[i,n]}function I(s,t,e,i,n,r){let l=r>0,f=x(s,e,i);if(!n&&l)return[0,f-t];let E=h(s,e-1),c=n-E,a=f-t-c;return l?[u(s,e)-c,a]:[c,u(s,i)-a]}function u(s,t){return h(s,t)-h(s,t-1)}function m(s,t){let e=[];for(let i=0;i<s;i++){if(i===0){e[i]=t(i);continue}e[i]=e[i-1]+t(i)}return e}function h(s,t){if(!s)throw Error("Missing required argument: itemsScrollOffsetIndex");return s[t]||0}function x(s,t,e){g(s.length,t,e);let i=h(s,e),n=h(s,t-1);return i-n}function v(s,t,e){let i=s.length;g(i,t,e);let n=h(s,t-1),r=e>=i-1?0:x(s,e+1,i-1);return[n,r]}function g(s,t,e){if(t>e)throw Error("start index must come before stop index");if(t<0||e<0||e>=s)throw Error("startIndex must be > -1 and -1 < stopIndex < itemCount");return!0}function p(s,t,e){return o.isVertical(s)?e:t}function O(s,t,e){return o.isVertical(s)?e:t}function _(s,t,e=-1){let i=s.length-1;for(;e+1<i;){let n=e+(i-e>>1);t(s[n])?i=n:e=n}return i}function S(s,t,e=!0){let i=null;return(...n)=>{if(e){e=!1,s(...n);return}window.clearTimeout(i),i=window.setTimeout(()=>{s(...n)},t)}}var w="visible-range-change",C=20,z=class{constructor(t,e,i,n){this.setUpdate(t,e,i,n)}setUpdate(t,e,i,n){this.startIndex=t,this.stopIndex=e,this.offsetIndex=i,this.itemsScrollOffsetIndex=n}clear(){this.startIndex=void 0,this.stopIndex=void 0,this.offsetIndex=void 0,this.itemsScrollOffsetIndex=void 0}isEqual(t,e,i,n){return t===this.startIndex&&e===this.stopIndex&&i===this.offsetIndex&&n===this.itemsScrollOffsetIndex}},V=document.createElement("template");V.innerHTML=`
  <style>
    :host {
      display: block;
      position: relative;
      contain: content;
      overflow: auto;
    }
    :host, ::slotted(*) {
      box-sizing: border-box;
    }
    #before-overflow, #after-overflow {
      visibility: hidden !important;
      flex-shrink: 0 !important;
    }
  </style>

  <div id='before-overflow'></div>
  <slot></slot>
  <div id='after-overflow'></div>
`;var d=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(document.importNode(V.content,!0)),this._visibleStartIndex=0,this._visibleStopIndex=0,this._offsetVisibleIndex=0,this._lastUpdate=new z,this._itemCount=0,this._itemsScrollOffsetIndex=[],this._lastScrollOffset=0,this._clientHeightCache=null,this._clientWidthCache=null,this._resizeObserver=null,this._enableResizeObserver=!1,this._beforeOverflowElement=null,this._afterOverflowElement=null,this._disableVirtualization=!1,this._virtualization=o.VERTICAL,this._initialized=!1,this._getItemLength=()=>0,this._isConnected=!1}get _height(){return this._clientHeightCache??this.clientHeight}set _height(t){this._clientHeightCache=t}get _width(){return this._clientWidthCache??this.clientWidth}set _width(t){this._clientWidthCache=t}get _scrollWindowLength(){return p(this._virtualization,this._width,this._height)}get getItemLength(){return this._getItemLength}set getItemLength(t){t!==this._getItemLength&&(this._getItemLength=t,this._updateItemsScrollOffsetIndex(),this._update())}get itemCount(){return this._itemCount}set itemCount(t){if(t<0)throw Error("Item count must be >= 0");this._itemCount!==t&&(this._itemCount=t,this._updateItemsScrollOffsetIndex(),this._update())}get offsetVisibleIndex(){return this._offsetVisibleIndex}set offsetVisibleIndex(t){if(t<0)throw Error("Offset visible index must be >= 0");this._offsetVisibleIndex!==t&&(this._offsetVisibleIndex=t,this._update())}get enableResizeObserver(){return this._enableResizeObserver}set enableResizeObserver(t){this._enableResizeObserver=Boolean(t),t?this._connectResizeObserver():this._disconnectResizeObserver()}get disableVirtualization(){return this._disableVirtualization}set disableVirtualization(t){this._disableVirtualization=Boolean(t)}get virtualization(){return this._virtualization}_getScrollOffset(){return O(this._virtualization,this.scrollLeft,this.scrollTop)}connectedCallback(){!this.isConnected||(this._height=this.clientHeight,this._width=this.clientWidth,this._lastScrollOffset=this._getScrollOffset(),this._beforeOverflowElement=this.shadowRoot.querySelector("#before-overflow"),this._afterOverflowElement=this.shadowRoot.querySelector("#after-overflow"),this.addEventListener("scroll",this._handleScroll.bind(this)),this.enableResizeObserver&&this._connectResizeObserver(),this._initialized&&this._update())}disconnectedCallback(){this.removeEventListener("scroll",this._handleScroll),this._disconnectResizeObserver()}init(t,e,{offsetVisibleIndex:i=0,virtualization:n=o.VERTICAL,enableResizeObserver:r=!1}={}){if(!Object.values(o).includes(n))throw Error(`Invalid virtualization. Must be one of: ${Object.values(o)}`);this._itemCount=t,this._offsetVisibleIndex=i,this._virtualization=n,this._getItemLength=e,this.enableResizeObserver=r,this._updateItemsScrollOffsetIndex(),this._initialized=!0,this._update()}reset(){this.scrollTop=0,this.scrollLeft=0}_updateItemsScrollOffsetIndex(){this._itemsScrollOffsetIndex=m(this.itemCount,this.getItemLength)}_update(t){if(!this.isConnected||!this._initialized)return;if(!this.itemCount){this._setVisibleItemIndexes(0,0),this._setScrollOverflow(0,0),this._lastUpdate.setUpdate(0,0,this.offsetVisibleIndex,this._itemsScrollOffsetIndex),this.dispatchEvent(new CustomEvent(w,{detail:{startIndex:0,stopIndex:0,offsetIndex:this.offsetVisibleIndex},bubbles:!0}));return}let[e,i]=b(this._itemsScrollOffsetIndex,this._scrollWindowLength,t??this._getScrollOffset()),[n,r]=this._getOffsetItemIndexes(e,i);this._lastUpdate.isEqual(n,r,this.offsetVisibleIndex,this._itemsScrollOffsetIndex)||(this._setVisibleItemIndexes(e,i),!this.disableVirtualization&&this._updateScrollOverflow(n,r),this._lastUpdate.setUpdate(n,r,this.offsetVisibleIndex,this._itemsScrollOffsetIndex),this.dispatchEvent(new CustomEvent(w,{detail:{startIndex:n,stopIndex:r,offsetIndex:this.offsetVisibleIndex},bubbles:!0})))}_setVisibleItemIndexes(t,e){this._visibleStartIndex=t,this._visibleStopIndex=e}_getOffsetItemIndexes(t,e){let i=Math.max(0,t-this.offsetVisibleIndex),n=Math.min(Math.max(0,this.itemCount-1),e+this.offsetVisibleIndex);return[i,n]}_handleScroll(){let t=this._getScrollOffset();if(t===this._lastScrollOffset)return;let e=t-this._lastScrollOffset;this._lastScrollOffset=t;let[i,n]=I(this._itemsScrollOffsetIndex,this._scrollWindowLength,this._visibleStartIndex,this._visibleStopIndex,t,e);(n<0||i<0)&&this._update(t)}_connectResizeObserver(){if(this._resizeObserver)return;let t=S(this._handleResize.bind(this),C);this._resizeObserver=new ResizeObserver(t),this._resizeObserver.observe(this)}_disconnectResizeObserver(){!this._resizeObserver||(this._resizeObserver.disconnect(),this._resizeObserver=null)}_handleResize(){this._height=this.clientHeight,this._width=this.clientWidth,this._update()}_updateScrollOverflow(t,e){let[i,n]=v(this._itemsScrollOffsetIndex,t,e);this._setScrollOverflow(i,n)}_setScrollOverflow(t,e){let i=o.isVertical(this.virtualization)?"height":"width";this._beforeOverflowElement.style[i]=`${Math.max(0,t)}px`,this._afterOverflowElement.style[i]=`${Math.max(0,e)}px`}};customElements.get("virtual-scroller")||customElements.define("virtual-scroller",d);export{d as default};
//# sourceMappingURL=virtual-scroller.esm.js.map
